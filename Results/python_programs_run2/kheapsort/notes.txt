============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/wilkinson/Documents/TCC/TG
collected 4 items

QuixBugs/python_testcases/test_kheapsort.py FFFF                         [100%]

=================================== FAILURES ===================================
____________________ test_kheapsort[input_data0-expected0] _____________________

input_data = [[1, 2, 3, 4, 5], 0], expected = [1, 2, 3, 4, 5]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_kheapsort(input_data, expected):
>       assert list(kheapsort(*input_data)) == expected
E       assert [] == [1, 2, 3, 4, 5]
E         
E         Right contains 5 more items, first extra item: 1
E         Use -v to get more diff

QuixBugs/python_testcases/test_kheapsort.py:15: AssertionError
____________________ test_kheapsort[input_data1-expected1] _____________________

input_data = [[3, 2, 1, 5, 4], 2], expected = [1, 2, 3, 4, 5]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_kheapsort(input_data, expected):
>       assert list(kheapsort(*input_data)) == expected
E       assert [4, 5] == [1, 2, 3, 4, 5]
E         
E         At index 0 diff: 4 != 1
E         Right contains 3 more items, first extra item: 3
E         Use -v to get more diff

QuixBugs/python_testcases/test_kheapsort.py:15: AssertionError
____________________ test_kheapsort[input_data2-expected2] _____________________

input_data = [[5, 4, 3, 2, 1], 4], expected = [1, 2, 3, 4, 5]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_kheapsort(input_data, expected):
>       assert list(kheapsort(*input_data)) == expected
E       assert [2, 3, 4, 5] == [1, 2, 3, 4, 5]
E         
E         At index 0 diff: 2 != 1
E         Right contains one more item: 5
E         Use -v to get more diff

QuixBugs/python_testcases/test_kheapsort.py:15: AssertionError
____________________ test_kheapsort[input_data3-expected3] _____________________

input_data = [[3, 12, 5, 1, 6], 3], expected = [1, 3, 5, 6, 12]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_kheapsort(input_data, expected):
>       assert list(kheapsort(*input_data)) == expected
E       assert [5, 6, 12] == [1, 3, 5, 6, 12]
E         
E         At index 0 diff: 5 != 1
E         Right contains 2 more items, first extra item: 6
E         Use -v to get more diff

QuixBugs/python_testcases/test_kheapsort.py:15: AssertionError
=========================== short test summary info ============================
FAILED QuixBugs/python_testcases/test_kheapsort.py::test_kheapsort[input_data0-expected0]
FAILED QuixBugs/python_testcases/test_kheapsort.py::test_kheapsort[input_data1-expected1]
FAILED QuixBugs/python_testcases/test_kheapsort.py::test_kheapsort[input_data2-expected2]
FAILED QuixBugs/python_testcases/test_kheapsort.py::test_kheapsort[input_data3-expected3]
============================== 4 failed in 0.04s ===============================
Different AST

prover o fix mas introduz outro bug
